INTRINSIC_TYPE_MAP={
'vrd_csr$'                               :['CSR Register Configure: CSR Read', 'common_tail_1.c'],
'vwr_csr$'                               :['CSR Register Configure: CSR Scalar Write','common_tail_1.c'],
'vwr_csri$'                              :['CSR Register Configure: CSR immediate Write','common_tail_1.c'],
'vldcb[1-8]in0_v_[iu][136][624]$'               :[ 'Contiguous Load: Unmasked Load',        'common_tail_1.c', 'common_tail_x.c'],
'vldcb[1-8]in0_v_[iu][136][624]_m$'             :[ 'Contiguous Load: Masked Load',          'common_tail_1.c', 'common_tail_x.c'],
'vstcb[1-8]in0_v_[iu][136][624]$'               :[ 'Contiguous Store: Unmasked Store',      'store_tail_1.c', 'store_tail_x.c'],
'vstcb[1-8]in0_v_[iu][136][624]_m$'             :[ 'Contiguous Store: Masked Store',        'store_tail_1.c', 'store_tail_x.c'],
'vldcb[1-8]in1_v_[iu][136][624]$'               :[ 'Interleave Load: Unmasked Load',        'common_tail_1.c', 'common_tail_x.c'],
'vldcb[1-8]in1_v_[iu][136][624]_m$'             :[ 'Interleave Load: Masked Load',          'common_tail_1.c', 'common_tail_x.c'],
'vstcb[1-8]in1_v_[iu][136][624]$'               :[ 'Interleave Store: Unmasked Store',      'store_tail_1.c', 'store_tail_x.c'],
'vstcb[1-8]in1_v_[iu][136][624]_m$'             :[ 'Interleave Store: Masked Store',        'store_tail_1.c', 'store_tail_x.c'],
'vgldcb[1-8]_v_[iu][136][624]$'                 :[ 'Indexed Load: Unmasked Load',           'common_tail_1.c', 'common_tail_x.c'],
'vgldcb[1-8]_v_[iu][136][624]_m$'               :[ 'Indexed Load: Masked Load',             'common_tail_1.c', 'common_tail_x.c'],
'vsstcb[1-8]_v_[iu][136][624]$'                 :[ 'Indexed Store: Unmasked Store',         'store_tail_1.c', 'store_tail_x.c'],
'vsstcb[1-8]_v_[iu][136][624]_m$'               :[ 'Indexed Store: Masked Store',           'store_tail_1.c', 'store_tail_x.c'],
'vw?s?add_[vw][vxw]_[iu][136][624](_accum\[07\]\[07\]\[07\])?(_noaccum)?$'            :[ 'Arithmetic: Unmasked Add',              'common_tail_1.c'],
'vw?s?add_[vw][vxw]_[iu][136][624](_accum\[07\]\[07\]\[07\])?(_noaccum)?_m$'          :[ 'Arithmetic: Masked Add',                'common_tail_1.c'],
'vw?s?sub_[vw][vxw]_[iu][136][624](_accum\[07\]\[07\]\[07\])?(_noaccum)?$'            :[ 'Arithmetic: Unmasked Sub',              'common_tail_1.c'],
'vw?s?sub_[vw][vxw]_[iu][136][624](_accum\[07\]\[07\]\[07\])?(_noaccum)?_m$'          :[ 'Arithmetic: Masked Sub',                'common_tail_1.c'],
'vw?s?mulh?q?_v[vx]_[iu][13][62]$'              :[ 'Arithmetic: Unmasked Multiply',         'common_tail_1.c'],
'vw?s?mulh?q?_v[vx]_[iu][13][62]_m$'            :[ 'Arithmetic: Masked Multiply',           'common_tail_1.c'],
'vs?neg_v_[iu][13][62]$'                        :[ 'Arithmetic: Unmasked Neg',              'common_tail_1.c'],
'vs?neg_v_[iu][13][62]_m$'                      :[ 'Arithmetic: Masked Neg',                'common_tail_1.c'],
'vmin_v[vx]_[iu][13][62]$'                      :[ 'Arithmetic: Unmasked Min',              'common_tail_1.c'],
'vmin_v[vx]_[iu][13][62]_m$'                    :[ 'Arithmetic: Masked Min',                'common_tail_1.c'],
'vmax_v[vx]_[iu][13][62]$'                      :[ 'Arithmetic: Unmasked Max',              'common_tail_1.c'],
'vmax_v[vx]_[iu][13][62]_m$'                    :[ 'Arithmetic: Masked Max',                'common_tail_1.c'],
'v(and)?(or)?(xor)?(not)?_v[vx]?_[iu][13][62]$'        :['Logic: Unmasked Vector logical',             'common_tail_1.c'],
'v(and)?(or)?(xor)?(not)?_v[vx]?_[iu][13][62]_m$'      :['Logic: Masked Vector logical',               'common_tail_1.c'],
'vmx?n?(or)?(and)?(not)?_mm_bool[813][62]?$'           :['Logic: Unmasked Mask logical',               'common_tail_1.c'],
'vmx?n?(or)?(and)?(not)?_mm_bool[813][62]?_m$'         :['Logic: Masked Mask logical',                 'common_tail_1.c'],
'vw?s?sll_[vw][vxiw]_[iu][136][624]$'                  :['Shift: Unmasked Logic Shift Left',           'common_tail_1.c'],
'vw?s?sll_[vw][vxiw]_[iu][136][624]_m$'                :['Shift: Masked Logic Shift Left',             'common_tail_1.c'],
'vw?srl_[vw][vxiw]_u[136][624]$'                       :['Shift: Unmasked Logic Shift Right',          'common_tail_1.c'],
'vw?srl_[vw][vxiw]_u[136][624]_m$'                     :['Shift: Masked Logic Shift Right',            'common_tail_1.c'],
'vw?sra_[vw][vxiw]_i[136][624]$'                       :['Shift: Unmasked Arithmetic Shift Right',     'common_tail_1.c'],
'vw?sra_[vw][vxiw]_i[136][624]_m$'                     :['Shift: Masked Arithmetic Shift Right',       'common_tail_1.c'],
'vwsrl_a[vxis]_[iu]64$'                    :['Shift: Unmasked Accumulator Shift Right',     'common_tail_1.c'],
'vwsrl_a[vxis]_[iu]64_m$'                  :['Shift: Masked Accumulator Shift Right',       'common_tail_1.c'],
'vcsl_i_[iu][136][624]$'                   :['Shift: Unmasked Circular Buffer Shift Left',  'common_tail_1.c'],
'vcsl_i_[iu][136][624]_m$'                 :['Shift: Masked Circular Buffer Shift Left',    'common_tail_1.c'],
'vcsr_i_[iu][136][624]$'                   :['Shift: Unmasked Circular Buffer Shift Right', 'common_tail_1.c'],
'vcsr_i_[iu][136][624]_m$'                 :['Shift: Masked Circular Buffer Shift Right',   'common_tail_1.c'],
'vmsll_mi_bool[813][62]?$'                 :['Shift: Mask Shift Left',                      'common_tail_1.c'],
'vmsrl_mi_bool[813][62]?$'                 :['Shift: Mask Shift Right',                     'common_tail_1.c'],
'vs?maccq?_vv_[iu][13][62]_?h?l?p?$'       :['Mac: Unmasked Multiply-Add',                  'common_tail_1.c'],
'vs?maccq?_vv_[iu][13][62]_?h?l?p?_m$'     :['Mac: Masked Multiply-Add',                    'common_tail_1.c'],
'vs?msubq?_vv_[iu][13][62]_?h?l?p?$'       :['Mac: Unmasked Multiply-Subtract',             'common_tail_1.c'],
'vs?msubq?_vv_[iu][13][62]_?h?l?p?_m$'     :['Mac: Masked Multiply-Subtract',               'common_tail_1.c'],
'vs?nmsacq?_vv_[iu][13][62]_?h?l?p?$'      :['Mac: Unmasked Multiply-Neg-Add',              'common_tail_1.c'],
'vs?nmsacq?_vv_[iu][13][62]_?h?l?p?_m$'    :['Mac: Masked Multiply-Neg-Add',                'common_tail_1.c'],
'vs?nmsubq?_vv_[iu][13][62]_?h?l?p?$'      :['Mac: Unmasked Multiply-Neg-Subtract',         'common_tail_1.c'],
'vs?nmsubq?_vv_[iu][13][62]_?h?l?p?_m$'    :['Mac: Masked Multiply-Neg-Subtract',           'common_tail_1.c'],
'vws?maccq?_vv_[iu][13][62]_?h?l?p?$'      :['Mac: Unmasked Multiply-Add',                  'common_tail_x.c'],
'vws?maccq?_vv_[iu][13][62]_?h?l?p?_m$'    :['Mac: Masked Multiply-Add',                    'common_tail_x.c'],
'vws?msubq?_vv_[iu][13][62]_?h?l?p?$'      :['Mac: Unmasked Multiply-Subtract',             'common_tail_x.c'],
'vws?msubq?_vv_[iu][13][62]_?h?l?p?_m$'    :['Mac: Masked Multiply-Subtract',               'common_tail_x.c'],
'vws?nmsacq?_vv_[iu][13][62]_?h?l?p?$'     :['Mac: Unmasked Multiply-Neg-Add',              'common_tail_x.c'],
'vws?nmsacq?_vv_[iu][13][62]_?h?l?p?_m$'   :['Mac: Masked Multiply-Neg-Add',                'common_tail_x.c'],
'vws?nmsubq?_vv_[iu][13][62]_?h?l?p?$'     :['Mac: Unmasked Multiply-Neg-Subtract',         'common_tail_x.c'],
'vws?nmsubq?_vv_[iu][13][62]_?h?l?p?_m$'   :['Mac: Masked Multiply-Neg-Subtract',           'common_tail_x.c'],
'vrs?sum_v_[iu][136][624]$'                :['Reduction: Unmasked Reduce Sum',              'common_tail_1.c'],
'vrs?sum_v_[iu][136][624]_m1?$'                         :[ 'Reduction: Masked Reduce Sum',                'common_tail_1.c'],
'vs?a?rdotp?(acc)?q?_vv_[iu][13][62]_?h?l?p?$'        :[ 'Reduction: Unmasked Reduce Dot',              'common_tail_1.c'],
'vs?a?rdotp?(acc)?q?_vv_[iu][13][62]_?h?l?p?_m1?$'    :[ 'Reduction: Masked Reduce Dot',                'common_tail_1.c'],
'vrmin_v_[iu][13][62]$'              :['Reduction: Unmasked Reduce Min',            'common_tail_1.c'],
'vrmin_v_[iu][13][62]_m1?$'            :['Reduction: Masked Reduce Min',              'common_tail_1.c'],
'vrmax_v_[iu][13][62]$'              :['Reduction: Unmasked Reduce Max',            'common_tail_1.c'],
'vrmax_v_[iu][13][62]_m1?$'            :['Reduction: Masked Reduce Max',              'common_tail_1.c'],
'vmv_v_[xi]_[iu][136][624]$'         :['Move: Unmasked Duplicate',                  'common_tail_1.c'],
'vmv_v_[xi]_[iu][136][624]_m$'       :['Move: Masked Duplicate' ,                   'common_tail_1.c'],
'vmv_x_v_[iu][13][62]$'              :['Move: Unmasked Extract',                    'common_tail_1.c'],
'vmv_x_v_[iu][13][62]_m$'            :['Move: Masked Extract',                      'common_tail_1.c'],
'vmsetult_xx_bool[813][62]?$'        :['Move: Masket Intrinsic',                    'common_tail_1.c'],
'vgather_vv_[iu][13][62]$'           :['Permutation: Unmasked Gather Intrinsic',    'common_tail_1.c'],
'vgather_vv_[iu][13][62]_m$'         :['Permutation: Masked Gather Intrinsic',      'common_tail_1.c'],
'vmerge_vv_[iu][13][62]_m$'          :['Permutation: Merge Intrinsic',              'common_tail_1.c'],
'vextend_v_[iu][13][62]$'            :['Conversion: Unmasked Extend Intrinsic',     'common_tail_1.c'],
'vextend_v_[iu][13][62]_m$'          :['Conversion: Masked Extend Intrinsic',       'common_tail_1.c'],
'vtrunc_w_[iu][13][62]$'             :['Conversion: Unmasked Truncate Intrinsic',   'common_tail_1.c'],
'vtrunc_w_[iu][13][62]_m$'           :['Conversion: Masked Truncate Intrinsic',     'common_tail_1.c'],
'vclip_wv_[iu][13][62]$'             :['Conversion: Unmasked Clip Intrinsic',       'common_tail_1.c'],
'vclip_wv_[iu][13][62]_m$'           :['Conversion: Masked Clip Intrinsic',         'common_tail_1.c'],
'vcmpeq_v[vx]_[iu][13][62]$'         :['Compare: Unmasked EQ Intrinsic' ,           'common_tail_1.c'],
'vcmpeq_v[vx]_[iu][13][62]_m$'       :['Compare: Masked EQ Intrinsic',              'common_tail_1.c'],
'vcmpne_v[vx]_[iu][13][62]$'         :['Compare: Unmasked NE Intrinsic',            'common_tail_1.c'],
'vcmpne_v[vx]_[iu][13][62]_m$'       :['Compare: masked NE Intrinsic',              'common_tail_1.c'],
'vcmplt_v[vx]_[iu][13][62]$'         :['Compare: Unmasked LT Intrinsic',            'common_tail_1.c'],
'vcmplt_v[vx]_[iu][13][62]_m$'       :['Compare: Masked LT Intrinsic',              'common_tail_1.c'],
'vcmple_v[vx]_[iu][13][62]$'         :['Compare: Unmasked LE Intrinsic',            'common_tail_1.c'],
'vcmple_v[vx]_[iu][13][62]_m$'       :['Compare: Masked LE Intrinsic',              'common_tail_1.c'],
'vcmpgt_v[vx]_[iu][13][62]$'         :['Compare: Unmasked GT Intrinsic',            'common_tail_1.c'],
'vcmpgt_v[vx]_[iu][13][62]_m$'       :['Compare: Masked GT Intrinsic',              'common_tail_1.c'],
'vcmpge_v[vx]_[iu][13][62]$'         :['Compare: Unmasked GE Intrinsic',            'common_tail_1.c'],
'vcmpge_v[vx]_[iu][13][62]_m$'       :['Compare: Masked GE Intrinsic',              'common_tail_1.c'],
'vsrdotiircq_v_i32_d[1-8]s[1-8]$'                :['IIR: Signed Fract Clear Dotiir',    'common_tail_1.c', 'common_tail_x.c'],
'vsrdotiirq_v_i32_d[1-8]s[1-8]$'                 :['IIR: Signed Fract Dotiir',          'common_tail_1.c', 'common_tail_x.c'],
'vsrdotiircu_v_i32_d[1-8]s[1-8]$'                :['IIR: Unsigned Fract Clear Dotiir',  'common_tail_1.c', 'common_tail_x.c'],
'vsrdotiiru_v_i32_d[1-8]s[1-8]$'                 :['IIR: Unsigned Fract Dotiir',        'common_tail_1.c', 'common_tail_x.c'],
}


