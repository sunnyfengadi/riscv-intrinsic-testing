INTRINSIC_TYPE_MAP={
'CSR Register Configure: CSR Read'              :['vrd_csr$', 'common_tail_1.c'],
'CSR Register Configure: CSR Scalar Write'      :['vwr_csr$','common_tail_1.c'],
'CSR Register Configure: CSR immediate Write'   :['vwr_csri$','common_tail_1.c'],
'Contiguous Load: Unmasked Load'                :['vldcb[1-8]in0_v_[iu][136][624]$', 'common_tail_1.c', 'common_tail_x.c'],
'Contiguous Load: Masked Load'                  :['vldcb[1-8]in0_v_[iu][136][624]_m$', 'common_tail_1.c', 'common_tail_x.c'],
'Contiguous Store: Unmasked Store'              :['vstcb[1-8]in0_v_[iu][136][624]$', 'store_tail_1.c', 'store_tail_x.c'],
'Contiguous Store: Masked Store'                :['vstcb[1-8]in0_v_[iu][136][624]_m$', 'store_tail_1.c', 'store_tail_x.c'],
'Interleave Load: Unmasked Load'                :['vldcb[1-8]in1_v_[iu][136][624]$', 'common_tail_1.c', 'common_tail_x.c'],
'Interleave Load: Masked Load'                  :['vldcb[1-8]in1_v_[iu][136][624]_m$', 'common_tail_1.c'],
'Interleave Store: Unmasked Store'              :['vstcb[1-8]in1_v_[iu][136][624]$', 'store_tail_1.c', 'store_tail_x.c'],
'Interleave Store: Masked Store'                :['vstcb[1-8]in1_v_[iu][136][624]_m$', 'store_tail_1.c', 'store_tail_x.c'],
'Indexed Load: Unmasked Load'                   :['vgldcb[1-8]_v_[iu][136][624]$', 'common_tail_1.c'],
'Indexed Load: Masked Load'                     :['vgldcb[1-8]_v_[iu][136][624]_m$', 'common_tail_1.c'],
'Indexed Store: Unmasked Store'                 :['vsstcb[1-8]_v_[iu][136][624]$', 'store_tail_1.c', 'store_tail_x.c'],
'Indexed Store: Masked Store'                   :['vsstcb[1-8]_v_[iu][136][624]_m$', 'store_tail_1.c', 'store_tail_x.c'],
'Arithmetic: Unmasked Add'                      :['vw?s?add_[vw][vxw]_[iu][136][624]$', 'common_tail_1.c'],
'Arithmetic: Masked Add'                        :['vw?s?add_[vw][vxw]_[iu][136][624]_m$', 'common_tail_1.c'],
'Arithmetic: Unmasked Sub'                      :['vw?s?sub_[vw][vxw]_[iu][136][624]$','common_tail_1.c'],
'Arithmetic: Masked Sub'                        :['vw?s?sub_[vw][vxw]_[iu][136][624]_m$','common_tail_1.c'],
'Arithmetic: Unmasked Multiply'                 :['vw?s?mulh?q?_v[vx]_[iu][13][62]$','common_tail_1.c'],
'Arithmetic: Masked Multiply'                   :['vw?s?mulh?q?_v[vx]_[iu][13][62]_m$','common_tail_1.c'],
'Arithmetic: Unmasked Neg'                      :['vs?neg_v_[iu][13][62]$','common_tail_1.c'],
'Arithmetic: Masked Neg'                        :['vs?neg_v_[iu][13][62]_m$','common_tail_1.c'],
'Arithmetic: Unmasked Min'                      :['vmin_v[vx]_[iu][13][62]$','common_tail_1.c'],
'Arithmetic: Masked Min'                        :['vmin_v[vx]_[iu][13][62]_m$','common_tail_1.c'],
'Arithmetic: Unmasked Max'                      :['vmax_v[vx]_[iu][13][62]$','common_tail_1.c'],
'Arithmetic: Masked Max'                        :['vmax_v[vx]_[iu][13][62]_m$','common_tail_1.c'],
'Logic: Unmasked Vector logical'                :['v(and)?(or)?(xor)?(not)?_v[vx]?_[iu][13][62]$','common_tail_1.c'],
'Logic: Masked Vector logical'                  :['v(and)?(or)?(xor)?(not)?_v[vx]?_[iu][13][62]_m$','common_tail_1.c'],
'Logic: Unmasked Mask logical'                  :['vmx?n?(or)?(and)?(not)?_mm_bool[813][62]?$','common_tail_1.c'],
'Logic: Masked Mask logical'                    :['vmx?n?(or)?(and)?(not)?_mm_bool[813][62]?_m$','common_tail_1.c'],
'Shift: Unmasked Logic Shift Left'              :['vw?s?sll_[vw][vxiw]_[iu][136][624]$', 'common_tail_1.c'],
'Shift: Masked Logic Shift Left'                :['vw?s?sll_[vw][vxiw]_[iu][136][624]_m$', 'common_tail_1.c'],
'Shift: Unmasked Logic Shift Right'             :['vw?srl_[vw][vxiw]_u[136][624]$', 'common_tail_1.c'],
'Shift: Masked Logic Shift Right'               :['vw?srl_[vw][vxiw]_u[136][624]_m$', 'common_tail_1.c'],
'Shift: Unmasked Arithmetic Shift Right'        :['vw?sra_[vw][vxiw]_i[136][624]$', 'common_tail_1.c'],
'Shift: Masked Arithmetic Shift Right'          :['vw?sra_[vw][vxiw]_i[136][624]_m$', 'common_tail_1.c'],
'Shift: Unmasked Accumulator Shift Right'       :['vwsrl_a[vxis]_[iu]64$', 'common_tail_1.c'],
'Shift: Masked Accumulator Shift Right'         :['vwsrl_a[vxis]_[iu]64_m$', 'common_tail_1.c'],
'Shift: Unmasked Circular Buffer Shift Left'    :['vcsl_i_[iu][136][624]$', 'common_tail_1.c'],
'Shift: Masked Circular Buffer Shift Left'      :['vcsl_i_[iu][136][624]_m$', 'common_tail_1.c'],
'Shift: Unmasked Circular Buffer Shift Right'   :['vcsr_i_[iu][136][624]$', 'common_tail_1.c'],
'Shift: Masked Circular Buffer Shift Right'     :['vcsr_i_[iu][136][624]_m$', 'common_tail_1.c'],
'Shift: Mask Shift Left'                        :['vmsll_mi_bool[813][62]?$', 'common_tail_1.c'],
'Shift: Mask Shift Right'                       :['vmsrl_mi_bool[813][62]?$', 'common_tail_1.c'],
'Mac: Unmasked Multiply-Add'                    :['vw?s?maccq?_vv_[iu][13][62]_?h?l?p?$', 'common_tail_1.c'],
'Mac: Masked Multiply-Add'                      :['vw?s?maccq?_vv_[iu][13][62]_?h?l?p?_m$', 'common_tail_1.c'],
'Mac: Unmasked Multiply-Subtract'               :['vw?s?msubq?_vv_[iu][13][62]_?h?l?p?$', 'common_tail_1.c'],
'Mac: Masked Multiply-Subtract'                 :['vw?s?msubq?_vv_[iu][13][62]_?h?l?p?_m$', 'common_tail_1.c'],
'Mac: Unmasked Multiply-Neg-Add'                :['vw?s?nmsacq?_vv_[iu][13][62]_?h?l?p?$', 'common_tail_1.c'],
'Mac: Masked Multiply-Neg-Add'                  :['vw?s?nmsacq?_vv_[iu][13][62]_?h?l?p?_m$', 'common_tail_1.c'],
'Mac: Unmasked Multiply-Neg-Subtract'           :['vw?s?nmsubq?_vv_[iu][13][62]_?h?l?p?$', 'common_tail_1.c'],
'Mac: Masked Multiply-Neg-Subtract'             :['vw?s?nmsubq?_vv_[iu][13][62]_?h?l?p?_m$', 'common_tail_1.c'],
'Reduction: Unmasked Reduce Sum'                :['vrs?sum_v_[iu][136][624]$', 'common_tail_1.c'],
'Reduction: Masked Reduce Sum'                  :['vrs?sum_v_[iu][136][624]_m$', 'common_tail_1.c'],
'Reduction: Unmasked Reduce Dot'                :['vs?a?rdotp?(acc)?q?_vv_[iu][13][62]_?h?l?p?$', 'common_tail_1.c'],
'Reduction: Masked Reduce Dot'                  :['vs?a?rdotp?(acc)?q?_vv_[iu][13][62]_?h?l?p?_m1?$', 'common_tail_1.c'],
'Reduction: Unmasked Reduce Min'                :['vrmin_v_[iu][13][62]$', 'common_tail_1.c'],
'Reduction: Masked Reduce Min'                  :['vrmin_v_[iu][13][62]_m$', 'common_tail_1.c'],
'Reduction: Unmasked Reduce Max'                :['vrmax_v_[iu][13][62]$', 'common_tail_1.c'],
'Reduction: Masked Reduce Max'                  :['vrmax_v_[iu][13][62]_m$', 'common_tail_1.c'],
'Move: Unmasked Duplicate'                      :['vmv_v_[xi]_[iu][136][624]$', 'common_tail_1.c'],
'Move: Masked Duplicate'                        :['vmv_v_[xi]_[iu][136][624]_m$', 'common_tail_1.c'],
'Move: Unmasked Extract'                        :['vmv_x_v_[iu][13][62]$', 'common_tail_1.c'],
'Move: Masked Extract'                          :['vmv_x_v_[iu][13][62]_m$', 'common_tail_1.c'],
'Move: Masket Intrinsic'                        :['vmsetult_xx_bool[813][62]?$', 'common_tail_1.c'],
'Permutation: Unmasked Gather Intrinsic'        :['vgather_vv_[iu][13][62]$', 'common_tail_1.c'],
'Permutation: Masked Gather Intrinsic'          :['vgather_vv_[iu][13][62]_m$', 'common_tail_1.c'],
'Permutation: Merge Intrinsic'                  :['vmerge_vv_[iu][13][62]_m$', 'common_tail_1.c'],
'Conversion: Unmasked Extend Intrinsic'         :['vextend_v_[iu][13][62]$', 'common_tail_1.c'],
'Conversion: Masked Extend Intrinsic'           :['vextend_v_[iu][13][62]_m$', 'common_tail_1.c'],
'Conversion: Unmasked Truncate Intrinsic'       :['vtrunc_w_[iu][13][62]$', 'common_tail_1.c'],
'Conversion: Masked Truncate Intrinsic'         :['vtrunc_w_[iu][13][62]_m$', 'common_tail_1.c'],
'Conversion: Unmasked Clip Intrinsic'           :['vclip_wv_[iu][13][62]$', 'common_tail_1.c'],
'Conversion: Masked Clip Intrinsic'             :['vclip_wv_[iu][13][62]_m$', 'common_tail_1.c'],
'Compare: Unmasked EQ Intrinsic'                :['vcmpeq_v[vx]_[iu][13][62]$', 'common_tail_1.c'],
'Compare: Masked EQ Intrinsic'                  :['vcmpeq_v[vx]_[iu][13][62]_m$', 'common_tail_1.c'],
'Compare: Unmasked NE Intrinsic'                :['vcmpne_v[vx]_[iu][13][62]$', 'common_tail_1.c'],
'Compare: masked NE Intrinsic'                  :['vcmpne_v[vx]_[iu][13][62]_m$', 'common_tail_1.c'],
'Compare: Unmasked LT Intrinsic'                :['vcmplt_v[vx]_[iu][13][62]$', 'common_tail_1.c'],
'Compare: Masked LT Intrinsic'                  :['vcmplt_v[vx]_[iu][13][62]_m$', 'common_tail_1.c'],
'Compare: Unmasked LE Intrinsic'                :['vcmple_v[vx]_[iu][13][62]$', 'common_tail_1.c'],
'Compare: Masked LE Intrinsic'                  :['vcmple_v[vx]_[iu][13][62]_m$', 'common_tail_1.c'],
'Compare: Unmasked GT Intrinsic'                :['vcmpgt_v[vx]_[iu][13][62]$', 'common_tail_1.c'],
'Compare: Masked GT Intrinsic'                  :['vcmpgt_v[vx]_[iu][13][62]_m$', 'common_tail_1.c'],
'Compare: Unmasked GE Intrinsic'                :['vcmpge_v[vx]_[iu][13][62]$', 'common_tail_1.c'],
'Compare: Masked GE Intrinsic'                  :['vcmpge_v[vx]_[iu][13][62]_m$', 'common_tail_1.c'],
'IIR: Signed Fract Clear Dotiir'                :['vsrdotiircq_v_i32_d[1-8]s[1-8]$', 'common_tail_1.c'],
'IIR: Signed Fract Dotiir'                      :['vsrdotiirq_v_i32_d[1-8]s[1-8]$', 'common_tail_1.c'],
'IIR: Unsigned Fract Clear Dotiir'              :['vsrdotiircu_v_i32_d[1-8]s[1-8]$', 'common_tail_1.c'],
'IIR: Unsigned Fract Dotiir'                    :['vsrdotiiru_v_i32_d[1-8]s[1-8]$', 'common_tail_1.c'],
}


